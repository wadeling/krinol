# 生产环境Docker Compose配置
version: '3.8'

services:
  backend:
    image: ${REGISTRY_NAME}/${REPO_NAME}/krinol-backend:${IMAGE_TAG}
    pull_policy: never
    container_name: krinol-backend-prod
    platform: ${PLATFORM:-linux/amd64}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ../backend/uploads:/app/uploads
    networks:
      - krinol-network

  frontend:
    image: ${REGISTRY_NAME}/${REPO_NAME}/krinol-frontend:${IMAGE_TAG}
    pull_policy: never
    container_name: krinol-frontend-prod
    platform: ${PLATFORM:-linux/amd64}
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - krinol-network

  db:
    image: mysql:8.0
    pull_policy: never
    container_name: krinol-db-prod
    platform: ${PLATFORM:-linux/amd64}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - krinol-network

  redis:
    image: redis:7-alpine
    pull_policy: never
    container_name: krinol-redis-prod
    platform: ${PLATFORM:-linux/amd64}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - krinol-network

volumes:
  mysql_data:
  redis_data:

networks:
  krinol-network:
    driver: bridge
